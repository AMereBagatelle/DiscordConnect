plugins {
    id 'fabric-loom' version '0.2.6-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    jcenter()
}

minecraft {
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

    modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    compile 'org.slf4j:slf4j-nop:1.7.25'
    compile 'net.dv8tion:JDA:4.1.1_126'

    include 'org.slf4j:slf4j-nop:1.7.25'
    include 'net.dv8tion:JDA:4.1.1_126'
    include 'org.slf4j:slf4j-api:1.7.25'
    include 'com.neovisionaries:nv-websocket-client:2.9'
    include 'com.squareup.okhttp3:okhttp:3.13.0'
    include 'com.squareup.okio:okio:1.17.2'
    include 'club.minnced:opus-java:1.0.4'
    include 'club.minnced:opus-java-api:1.0.4'
    include 'club.minnced:opus-java-natives:1.0.4'
    include 'org.apache.commons:commons-collections4:4.1'
    include 'net.sf.trove4j:trove4j:3.0.3'
    include 'com.fasterxml.jackson.core:jackson-databind:2.10.1'
    include 'com.fasterxml.jackson.core:jackson-annotations:2.10.1'
    include 'com.fasterxml.jackson.core:jackson-core:2.10.1'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
